buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

import groovy.json.JsonOutput
import groovy.json.JsonSlurper

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = 'v1.8.23'
group = 'net.geforcemods.securitycraft'
archivesBaseName = 'securitycraft'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

processResources { 
	exclude ".cache"
	duplicatesStrategy = 'include'
 
	//replace ${version} in mods.toml
	inputs.property 'version', project.version

	from(sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'

		expand 'version': project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'META-INF/mods.toml'
	}

    //minify json resources
    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

sourceSets {
	main {
		resources {
			srcDirs += "src/generated/resources" //include generated files
		}
	}
}

minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
    runs {
        client {
            workingDirectory project.file('run/client')
            property 'forge.logging.console.level', 'debug'

            mods {
                securitycraft {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.console.level', 'debug'
            args '-nogui'

            mods {
                securitycraft {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'securitycraft', '--all', '--output', file('src/generated/resources/')

            mods {
                securitycraft {
                    source sourceSets.main
                }
            }
        }
	}
}

repositories { 
	maven { // TOP
		name 'tterrag maven'
		url "https://maven.tterrag.com/"
	}
    maven { // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
    	url "https://cursemaven.com/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.0'
    
	implementation fg.deobf("mezz.jei:jei-1.16.5:7.7.1.110")
	implementation fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-3.1.4-22")
    implementation fg.deobf("curse.maven:hwyla-253449:3033593")
	compileOnly fg.deobf("curse.maven:lycanites-mobs-224770:3358847") //compileOnly still adds the dep to runtime for some reason, and this mod does not work in dev. to fix this, remove the mods.toml file from this gradle dependency's jar file so the mod does not get loaded ingame
}

jar {
	exclude('net/geforcemods/securitycraft/datagen/**') //exclude files from the built jar that are only used to generate the assets

    manifest {
        attributes(["Specification-Title": "SecurityCraft",
                    "Specification-Vendor": "Geforce, bl4ckscor3, Redstone_Dubstep",
                    "Specification-Version": "${version}",
                    "Implementation-Title": "SecurityCraft",
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"Geforce, bl4ckscor3, Redstone_Dubstep",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}