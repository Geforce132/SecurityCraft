plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'net.neoforged.moddev' version '2.0.76'
}

import groovy.json.JsonOutput
import groovy.json.JsonSlurper

version = '1.10'
group = 'net.geforcemods.securitycraft'

base {
	archivesName = 'securitycraft'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

processResources {
	exclude ".cache"
	duplicatesStrategy = 'include'

	//minify json resources
	doLast {
		fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
			File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
		}
	}
}

sourceSets.main.resources {
	srcDir 'src/generated/resources' //include generated files
}

neoForge {
	version = "21.1.193"
	validateAccessTransformers = true

	runs {
		configureEach {
			logLevel = org.slf4j.event.Level.DEBUG
			gameDirectory = project.file('run/' + name)
			ideName = "SC ${project.mc_version} " + ideName.get()
		}

		client {
			client()
		}

		client2 {
			client()
			gameDirectory = project.file('run/client')
			programArguments.addAll('--username', 'Dev2')
		}

		server {
			server()
			programArgument('-nogui')
		}

		data {
			data()
			programArguments.addAll('--mod', 'securitycraft', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath())
		}
	}

	mods {
		securitycraft {
			sourceSet(sourceSets.main)
		}
	}
}

repositories {
	maven {
		url = "https://cursemaven.com/"
		content {
			includeGroup "curse.maven"
		}
	}

	exclusiveContent {
		forRepository {
			maven {
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	implementation "curse.maven:architectury-api-419699:5786327" //ftb teams dependency
	implementation "curse.maven:ftb-library-forge-404465:6016745" //ftb teams dependency
	implementation "curse.maven:ftb-teams-forge-404468:5882217"
	implementation "curse.maven:jei-238222:5846880"
	implementation "curse.maven:the-one-probe-245211:5836106"
	implementation "curse.maven:jade-324717:6011258"
	implementation "curse.maven:betterf3-401648:5873258"
	implementation "curse.maven:cloth-config-348521:5729127" //betterf3 dependency
	implementation "curse.maven:wthit-forge-455982:5977917"
	implementation "curse.maven:badpackets-615134:5430629" //wthit dependency
	implementation "curse.maven:projecte-226410:6323142"
//	implementation "curse.maven:embeddium-908741:5681729"
	implementation "maven.modrinth:sodium:mc1.21.1-0.6.13-neoforge" //incompatible with embeddium
}

tasks.named('jar', Jar).configure {
	exclude('net/geforcemods/securitycraft/datagen/**') //exclude files from the built jar that are only used to generate the assets & data
	archiveFileName = "[${project.mc_version}] SecurityCraft v${version}.jar"
	manifest {
		attributes(["Specification-Title": "SecurityCraft",
					"Specification-Vendor": "Geforce, bl4ckscor3, Redstone_Dubstep",
					"Specification-Version": "${version}",
					"Implementation-Title": "SecurityCraft",
					"Implementation-Version": "${version}",
					"Implementation-Vendor": "Geforce, bl4ckscor3, Redstone_Dubstep"],)
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.release = 21
}

idea {
	module {
		downloadSources = true
		downloadJavadoc = true
	}
}